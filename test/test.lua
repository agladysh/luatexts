-- TODO: Scrap these hacks and write a proper test suite.

pcall(require, 'luarocks.require')
require 'lua-nucleo.module'
require 'lua-nucleo.strict'
require = import 'lua-nucleo/require_and_declare.lua' { 'require_and_declare' }

math.randomseed(12345)

local luatexts = require 'luatexts'
local luatexts_lua = require 'luatexts.lua'

local ensure,
      ensure_equals,
      ensure_tequals,
      ensure_tdeepequals,
      ensure_strequals,
      ensure_error,
      ensure_error_with_substring,
      ensure_fails_with_substring,
      ensure_returns
      = import 'lua-nucleo/ensure.lua'
      {
        'ensure',
        'ensure_equals',
        'ensure_tequals',
        'ensure_tdeepequals',
        'ensure_strequals',
        'ensure_error',
        'ensure_error_with_substring',
        'ensure_fails_with_substring',
        'ensure_returns'
      }

local split_by_char = import 'lua-nucleo/string.lua' { 'split_by_char' }

local tset = import 'lua-nucleo/table-utils.lua' { 'tset' }

local tpretty = import 'lua-nucleo/tpretty.lua' { 'tpretty' }

local tserialize = import 'lua-nucleo/tserialize.lua' { 'tserialize' }

--------------------------------------------------------------------------------

-- This is this file: http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt
local UTF8_TEST_DATA = (function() return
"\085\084\070\045\056\032\100\101\099\111\100\101\114\032\099\097\112\097" ..
"\098\105\108\105\116\121\032\097\110\100\032\115\116\114\101\115\115\032" ..
"\116\101\115\116\010\045\045\045\045\045\045\045\045\045\045\045\045\045" ..
"\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045\045" ..
"\045\045\045\045\045\045\045\045\045\010\010\077\097\114\107\117\115\032" ..
"\075\117\104\110\032\060\104\116\116\112\058\047\047\119\119\119\046\099" ..
"\108\046\099\097\109\046\097\099\046\117\107\047\126\109\103\107\050\053" ..
"\047\062\032\045\032\050\048\048\051\045\048\050\045\049\057\010\010\084" ..
"\104\105\115\032\116\101\115\116\032\102\105\108\101\032\099\097\110\032" ..
"\104\101\108\112\032\121\111\117\032\101\120\097\109\105\110\101\044\032" ..
"\104\111\119\032\121\111\117\114\032\085\084\070\045\056\032\100\101\099" ..
"\111\100\101\114\032\104\097\110\100\108\101\115\010\118\097\114\105\111" ..
"\117\115\032\116\121\112\101\115\032\111\102\032\099\111\114\114\101\099" ..
"\116\044\032\109\097\108\102\111\114\109\101\100\044\032\111\114\032\111" ..
"\116\104\101\114\119\105\115\101\032\105\110\116\101\114\101\115\116\105" ..
"\110\103\032\085\084\070\045\056\010\115\101\113\117\101\110\099\101\115" ..
"\046\032\084\104\105\115\032\102\105\108\101\032\105\115\032\110\111\116" ..
"\032\109\101\097\110\116\032\116\111\032\098\101\032\097\032\099\111\110" ..
"\102\111\114\109\097\110\099\101\032\116\101\115\116\046\032\073\116\032" ..
"\100\111\101\115\010\110\111\116\032\112\114\101\115\099\114\105\098\101" ..
"\115\032\097\110\121\032\112\097\114\116\105\099\117\108\097\114\032\111" ..
"\117\116\099\111\109\101\032\097\110\100\032\116\104\101\114\101\102\111" ..
"\114\101\032\116\104\101\114\101\032\105\115\032\110\111\032\119\097\121" ..
"\032\116\111\010\034\112\097\115\115\034\032\111\114\032\034\102\097\105" ..
"\108\034\032\116\104\105\115\032\116\101\115\116\032\102\105\108\101\044" ..
"\032\101\118\101\110\032\116\104\111\117\103\104\032\116\104\101\032\116" ..
"\101\120\116\115\032\115\117\103\103\101\115\116\115\032\097\010\112\114" ..
"\101\102\101\114\097\098\108\101\032\100\101\099\111\100\101\114\032\098" ..
"\101\104\097\118\105\111\117\114\032\097\116\032\115\111\109\101\032\112" ..
"\108\097\099\101\115\046\032\084\104\101\032\097\105\109\032\105\115\032" ..
"\105\110\115\116\101\097\100\032\116\111\010\104\101\108\112\032\121\111" ..
"\117\032\116\104\105\110\107\032\097\098\111\117\116\032\097\110\100\032" ..
"\116\101\115\116\032\116\104\101\032\098\101\104\097\118\105\111\117\114" ..
"\032\111\102\032\121\111\117\114\032\085\084\070\045\056\032\111\110\032" ..
"\097\010\115\121\115\116\101\109\097\116\105\099\032\099\111\108\108\101" ..
"\099\116\105\111\110\032\111\102\032\117\110\117\115\117\097\108\032\105" ..
"\110\112\117\116\115\046\032\069\120\112\101\114\105\101\110\099\101\032" ..
"\115\111\032\102\097\114\032\115\117\103\103\101\115\116\115\010\116\104" ..
"\097\116\032\109\111\115\116\032\102\105\114\115\116\045\116\105\109\101" ..
"\032\097\117\116\104\111\114\115\032\111\102\032\085\084\070\045\056\032" ..
"\100\101\099\111\100\101\114\115\032\102\105\110\100\032\097\116\032\108" ..
"\101\097\115\116\032\111\110\101\010\115\101\114\105\111\117\115\032\112" ..
"\114\111\098\108\101\109\032\105\110\032\116\104\101\105\114\032\100\101" ..
"\099\111\100\101\114\032\098\121\032\117\115\105\110\103\032\116\104\105" ..
"\115\032\102\105\108\101\046\010\010\084\104\101\032\116\101\115\116\032" ..
"\108\105\110\101\115\032\098\101\108\111\119\032\099\111\118\101\114\032" ..
"\098\111\117\110\100\097\114\121\032\099\111\110\100\105\116\105\111\110" ..
"\115\044\032\109\097\108\102\111\114\109\101\100\032\085\084\070\045\056" ..
"\010\115\101\113\117\101\110\099\101\115\032\097\115\032\119\101\108\108" ..
"\032\097\115\032\099\111\114\114\101\099\116\108\121\032\101\110\099\111" ..
"\100\101\100\032\085\084\070\045\056\032\115\101\113\117\101\110\099\101" ..
"\115\032\111\102\032\085\110\105\099\111\100\101\032\099\111\100\101\010" ..
"\112\111\105\110\116\115\032\116\104\097\116\032\115\104\111\117\108\100" ..
"\032\110\101\118\101\114\032\111\099\099\117\114\032\105\110\032\097\032" ..
"\099\111\114\114\101\099\116\032\085\084\070\045\056\032\102\105\108\101" ..
"\046\010\010\065\099\099\111\114\100\105\110\103\032\116\111\032\073\083" ..
"\079\032\049\048\054\052\054\045\049\058\050\048\048\048\044\032\115\101" ..
"\099\116\105\111\110\115\032\068\046\055\032\097\110\100\032\050\046\051" ..
"\099\044\032\097\032\100\101\118\105\099\101\010\114\101\099\101\105\118" ..
"\105\110\103\032\085\084\070\045\056\032\115\104\097\108\108\032\105\110" ..
"\116\101\114\112\114\101\116\032\097\032\034\109\097\108\102\111\114\109" ..
"\101\100\032\115\101\113\117\101\110\099\101\032\105\110\032\116\104\101" ..
"\032\115\097\109\101\032\119\097\121\010\116\104\097\116\032\105\116\032" ..
"\105\110\116\101\114\112\114\101\116\115\032\097\032\099\104\097\114\097" ..
"\099\116\101\114\032\116\104\097\116\032\105\115\032\111\117\116\115\105" ..
"\100\101\032\116\104\101\032\097\100\111\112\116\101\100\032\115\117\098" ..
"\115\101\116\034\032\097\110\100\010\034\099\104\097\114\097\099\116\101" ..
"\114\115\032\116\104\097\116\032\097\114\101\032\110\111\116\032\119\105" ..
"\116\104\105\110\032\116\104\101\032\097\100\111\112\116\101\100\032\115" ..
"\117\098\115\101\116\032\115\104\097\108\108\032\098\101\032\105\110\100" ..
"\105\099\097\116\101\100\010\116\111\032\116\104\101\032\117\115\101\114" ..
"\034\032\098\121\032\097\032\114\101\099\101\105\118\105\110\103\032\100" ..
"\101\118\105\099\101\046\032\065\032\113\117\105\116\101\032\099\111\109" ..
"\109\111\110\108\121\032\117\115\101\100\032\097\112\112\114\111\097\099" ..
"\104\032\105\110\010\085\084\070\045\056\032\100\101\099\111\100\101\114" ..
"\115\032\105\115\032\116\111\032\114\101\112\108\097\099\101\032\097\110" ..
"\121\032\109\097\108\102\111\114\109\101\100\032\085\084\070\045\056\032" ..
"\115\101\113\117\101\110\099\101\032\098\121\032\097\010\114\101\112\108" ..
"\097\099\101\109\101\110\116\032\099\104\097\114\097\099\116\101\114\032" ..
"\040\085\043\070\070\070\068\041\044\032\119\104\105\099\104\032\108\111" ..
"\111\107\115\032\097\032\098\105\116\032\108\105\107\101\032\097\110\032" ..
"\105\110\118\101\114\116\101\100\010\113\117\101\115\116\105\111\110\032" ..
"\109\097\114\107\044\032\111\114\032\097\032\115\105\109\105\108\097\114" ..
"\032\115\121\109\098\111\108\046\032\073\116\032\109\105\103\104\116\032" ..
"\098\101\032\097\032\103\111\111\100\032\105\100\101\097\032\116\111\010" ..
"\118\105\115\117\097\108\108\121\032\100\105\115\116\105\110\103\117\105" ..
"\115\104\032\097\032\109\097\108\102\111\114\109\101\100\032\085\084\070" ..
"\045\056\032\115\101\113\117\101\110\099\101\032\102\114\111\109\032\097" ..
"\032\099\111\114\114\101\099\116\108\121\010\101\110\099\111\100\101\100" ..
"\032\085\110\105\099\111\100\101\032\099\104\097\114\097\099\116\101\114" ..
"\032\116\104\097\116\032\105\115\032\106\117\115\116\032\110\111\116\032" ..
"\097\118\097\105\108\097\098\108\101\032\105\110\032\116\104\101\032\099" ..
"\117\114\114\101\110\116\010\102\111\110\116\032\098\117\116\032\111\116" ..
"\104\101\114\119\105\115\101\032\102\117\108\108\121\032\108\101\103\097" ..
"\108\044\032\101\118\101\110\032\116\104\111\117\103\104\032\073\083\079" ..
"\032\049\048\054\052\054\045\049\032\100\111\101\115\110\039\116\010\109" ..
"\097\110\100\097\116\101\032\116\104\105\115\046\032\073\110\032\097\110" ..
"\121\032\099\097\115\101\044\032\106\117\115\116\032\105\103\110\111\114" ..
"\105\110\103\032\109\097\108\102\111\114\109\101\100\032\115\101\113\117" ..
"\101\110\099\101\115\032\111\114\010\117\110\097\118\097\105\108\097\098" ..
"\108\101\032\099\104\097\114\097\099\116\101\114\115\032\100\111\101\115" ..
"\032\110\111\116\032\099\111\110\102\111\114\109\032\116\111\032\073\083" ..
"\079\032\049\048\054\052\054\044\032\119\105\108\108\032\109\097\107\101" ..
"\010\100\101\098\117\103\103\105\110\103\032\109\111\114\101\032\100\105" ..
"\102\102\105\099\117\108\116\044\032\097\110\100\032\099\097\110\032\108" ..
"\101\097\100\032\116\111\032\117\115\101\114\032\099\111\110\102\117\115" ..
"\105\111\110\046\010\010\080\108\101\097\115\101\032\099\104\101\099\107" ..
"\044\032\119\104\101\116\104\101\114\032\097\032\109\097\108\102\111\114" ..
"\109\101\100\032\085\084\070\045\056\032\115\101\113\117\101\110\099\101" ..
"\032\105\115\032\040\049\041\032\114\101\112\114\101\115\101\110\116\101" ..
"\100\032\097\116\010\097\108\108\044\032\040\050\041\032\114\101\112\114" ..
"\101\115\101\110\116\101\100\032\098\121\032\101\120\097\099\116\108\121" ..
"\032\111\110\101\032\115\105\110\103\108\101\032\114\101\112\108\097\099" ..
"\101\109\101\110\116\032\099\104\097\114\097\099\116\101\114\032\040\111" ..
"\114\010\101\113\117\105\118\097\108\101\110\116\032\115\105\103\110\097" ..
"\108\041\044\032\097\110\100\032\040\051\041\032\116\104\101\032\102\111" ..
"\108\108\111\119\105\110\103\032\113\117\111\116\097\116\105\111\110\032" ..
"\109\097\114\107\032\097\102\116\101\114\032\097\110\010\105\108\108\101" ..
"\103\097\108\032\085\084\070\045\056\032\115\101\113\117\101\110\099\101" ..
"\032\105\115\032\099\111\114\114\101\099\116\108\121\032\100\105\115\112" ..
"\108\097\121\101\100\044\032\105\046\101\046\032\112\114\111\112\101\114" ..
"\010\114\101\115\121\110\099\104\114\111\110\105\122\097\116\105\111\110" ..
"\032\116\097\107\101\115\032\112\108\097\099\101\032\105\109\109\097\103" ..
"\101\097\116\101\108\121\032\097\102\116\101\114\032\097\110\121\032\109" ..
"\097\108\102\111\114\109\101\100\010\115\101\113\117\101\110\099\101\046" ..
"\032\084\104\105\115\032\102\105\108\101\032\115\097\121\115\032\034\084" ..
"\072\069\032\069\078\068\034\032\105\110\032\116\104\101\032\108\097\115" ..
"\116\032\108\105\110\101\044\032\115\111\032\105\102\032\121\111\117\032" ..
"\100\111\110\039\116\010\115\101\101\032\116\104\097\116\044\032\121\111" ..
"\117\114\032\100\101\099\111\100\101\114\032\099\114\097\115\104\101\100" ..
"\032\115\111\109\101\104\111\119\032\098\101\102\111\114\101\044\032\119" ..
"\104\105\099\104\032\115\104\111\117\108\100\032\097\108\119\097\121\115" ..
"\032\098\101\010\099\097\117\115\101\032\102\111\114\032\099\111\110\099" ..
"\101\114\110\046\010\010\065\108\108\032\108\105\110\101\115\032\105\110" ..
"\032\116\104\105\115\032\102\105\108\101\032\097\114\101\032\101\120\097" ..
"\099\116\108\121\032\055\057\032\099\104\097\114\097\099\116\101\114\115" ..
"\032\108\111\110\103\032\040\112\108\117\115\032\116\104\101\032\108\105" ..
"\110\101\010\102\101\101\100\041\046\032\073\110\032\097\100\100\105\116" ..
"\105\111\110\044\032\097\108\108\032\108\105\110\101\115\032\101\110\100" ..
"\032\119\105\116\104\032\034\124\034\044\032\101\120\099\101\112\116\032" ..
"\102\111\114\032\116\104\101\032\116\119\111\032\116\101\115\116\010\108" ..
"\105\110\101\115\032\050\046\049\046\049\032\097\110\100\032\050\046\050" ..
"\046\049\044\032\119\104\105\099\104\032\099\111\110\116\097\105\110\032" ..
"\110\111\110\045\112\114\105\110\116\097\098\108\101\032\065\083\067\073" ..
"\073\032\099\111\110\116\114\111\108\115\010\085\043\048\048\048\048\032" ..
"\097\110\100\032\085\043\048\048\055\070\046\032\073\102\032\121\111\117" ..
"\032\100\105\115\112\108\097\121\032\116\104\105\115\032\102\105\108\101" ..
"\032\119\105\116\104\032\097\032\102\105\120\101\100\045\119\105\100\116" ..
"\104\032\102\111\110\116\044\010\116\104\101\115\101\032\034\124\034\032" ..
"\099\104\097\114\097\099\116\101\114\115\032\115\104\111\117\108\100\032" ..
"\097\108\108\032\108\105\110\101\032\117\112\032\105\110\032\099\111\108" ..
"\117\109\110\032\055\057\032\040\114\105\103\104\116\032\109\097\114\103" ..
"\105\110\041\046\010\084\104\105\115\032\097\108\108\111\119\115\032\121" ..
"\111\117\032\116\111\032\116\101\115\116\032\113\117\105\099\107\108\121" ..
"\044\032\119\104\101\116\104\101\114\032\121\111\117\114\032\085\084\070" ..
"\045\056\032\100\101\099\111\100\101\114\032\102\105\110\100\115\032\116" ..
"\104\101\010\099\111\114\114\101\099\116\032\110\117\109\098\101\114\032" ..
"\111\102\032\099\104\097\114\097\099\116\101\114\115\032\105\110\032\101" ..
"\118\101\114\121\032\108\105\110\101\044\032\116\104\097\116\032\105\115" ..
"\032\119\104\101\116\104\101\114\032\101\097\099\104\010\109\097\108\102" ..
"\111\114\109\101\100\032\115\101\113\117\101\110\099\101\115\032\105\115" ..
"\032\114\101\112\108\097\099\101\100\032\098\121\032\097\032\115\105\110" ..
"\103\108\101\032\114\101\112\108\097\099\101\109\101\110\116\032\099\104" ..
"\097\114\097\099\116\101\114\046\010\010\078\111\116\101\032\116\104\097" ..
"\116\032\097\115\032\097\110\032\097\108\116\101\114\110\097\116\105\118" ..
"\101\032\116\111\032\116\104\101\032\110\111\116\105\111\110\032\111\102" ..
"\032\109\097\108\102\111\114\109\101\100\032\115\101\113\117\101\110\099" ..
"\101\032\117\115\101\100\010\104\101\114\101\044\032\105\116\032\105\115" ..
"\032\097\108\115\111\032\097\032\112\101\114\102\101\099\116\108\121\032" ..
"\097\099\099\101\112\116\097\098\108\101\032\040\097\110\100\032\105\110" ..
"\032\115\111\109\101\032\115\105\116\117\097\116\105\111\110\115\032\101" ..
"\118\101\110\010\112\114\101\102\101\114\097\098\108\101\041\032\115\111" ..
"\108\117\116\105\111\110\032\116\111\032\114\101\112\114\101\115\101\110" ..
"\116\032\101\097\099\104\032\105\110\100\105\118\105\100\117\097\108\032" ..
"\098\121\116\101\032\111\102\032\097\032\109\097\108\102\111\114\109\101" ..
"\100\010\115\101\113\117\101\110\099\101\032\098\121\032\097\032\114\101" ..
"\112\108\097\099\101\109\101\110\116\032\099\104\097\114\097\099\116\101" ..
"\114\046\032\073\102\032\121\111\117\032\102\111\108\108\111\119\032\116" ..
"\104\105\115\032\115\116\114\097\116\101\103\121\032\105\110\010\121\111" ..
"\117\114\032\100\101\099\111\100\101\114\044\032\116\104\101\110\032\112" ..
"\108\101\097\115\101\032\105\103\110\111\114\101\032\116\104\101\032\034" ..
"\124\034\032\099\111\108\117\109\110\046\010\010\010\072\101\114\101\032" ..
"\099\111\109\101\032\116\104\101\032\116\101\115\116\115\058\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\049\032\032\083\111\109\101" ..
"\032\099\111\114\114\101\099\116\032\085\084\070\045\056\032\116\101\120" ..
"\116\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032"
end)() .. (function() return
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\089\111\117\032\115\104\111\117\108" ..
"\100\032\115\101\101\032\116\104\101\032\071\114\101\101\107\032\119\111" ..
"\114\100\032\039\107\111\115\109\101\039\058\032\032\032\032\032\032\032" ..
"\034\206\186\225\189\185\207\131\206\188\206\181\034\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\050\032\032\066\111" ..
"\117\110\100\097\114\121\032\099\111\110\100\105\116\105\111\110\032\116" ..
"\101\115\116\032\099\097\115\101\115\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\050\046\049\032\032\070\105" ..
"\114\115\116\032\112\111\115\115\105\098\108\101\032\115\101\113\117\101" ..
"\110\099\101\032\111\102\032\097\032\099\101\114\116\097\105\110\032\108" ..
"\101\110\103\116\104\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\050\046\049\046\049\032\032\049\032" ..
"\098\121\116\101\032\032\040\085\045\048\048\048\048\048\048\048\048\041" ..
"\058\032\032\032\032\032\032\032\032\034\000\034\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\010\050" ..
"\046\049\046\050\032\032\050\032\098\121\116\101\115\032\040\085\045\048" ..
"\048\048\048\048\048\056\048\041\058\032\032\032\032\032\032\032\032\034" ..
"\194\128\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\124\010\050\046\049\046\051\032\032\051\032\098" ..
"\121\116\101\115\032\040\085\045\048\048\048\048\048\056\048\048\041\058" ..
"\032\032\032\032\032\032\032\032\034\224\160\128\034\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\050\046\049\046\052\032\032\052\032\098\121\116\101\115\032\040\085\045" ..
"\048\048\048\049\048\048\048\048\041\058\032\032\032\032\032\032\032\032" ..
"\034\240\144\128\128\034\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\050\046\049\046\053\032\032" ..
"\053\032\098\121\116\101\115\032\040\085\045\048\048\050\048\048\048\048" ..
"\048\041\058\032\032\032\032\032\032\032\032\034\248\136\128\128\128\034" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\050\046\049\046\054\032\032\054\032\098\121\116\101" ..
"\115\032\040\085\045\048\052\048\048\048\048\048\048\041\058\032\032\032" ..
"\032\032\032\032\032\034\252\132\128\128\128\128\034\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\124\010\050\046\050\032\032\076\097\115\116\032" ..
"\112\111\115\115\105\098\108\101\032\115\101\113\117\101\110\099\101\032" ..
"\111\102\032\097\032\099\101\114\116\097\105\110\032\108\101\110\103\116" ..
"\104\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\124\010\050\046\050\046\049\032\032\049\032\098\121\116" ..
"\101\032\032\040\085\045\048\048\048\048\048\048\055\070\041\058\032\032" ..
"\032\032\032\032\032\032\034\127\034\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\010\050\046\050\046" ..
"\050\032\032\050\032\098\121\116\101\115\032\040\085\045\048\048\048\048" ..
"\048\055\070\070\041\058\032\032\032\032\032\032\032\032\034\223\191\034" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\050\046\050\046\051\032\032\051\032\098\121\116\101" ..
"\115\032\040\085\045\048\048\048\048\070\070\070\070\041\058\032\032\032" ..
"\032\032\032\032\032\034\239\191\191\034\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\050\046\050" ..
"\046\052\032\032\052\032\098\121\116\101\115\032\040\085\045\048\048\049" ..
"\070\070\070\070\070\041\058\032\032\032\032\032\032\032\032\034\247\191" ..
"\191\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\124\010\050\046\050\046\053\032\032\053\032\098" ..
"\121\116\101\115\032\040\085\045\048\051\070\070\070\070\070\070\041\058" ..
"\032\032\032\032\032\032\032\032\034\251\191\191\191\191\034\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\124\010\050\046\050\046\054\032\032\054\032\098\121\116\101\115\032\040" ..
"\085\045\055\070\070\070\070\070\070\070\041\058\032\032\032\032\032\032" ..
"\032\032\034\253\191\191\191\191\191\034\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\050\046\051\032\032\079\116\104\101\114\032\098\111" ..
"\117\110\100\097\114\121\032\099\111\110\100\105\116\105\111\110\115\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\050\046\051\046\049\032\032\085\045\048\048\048\048\068\055" ..
"\070\070\032\061\032\101\100\032\057\102\032\098\102\032\061\032\034\237" ..
"\159\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\050\046\051\046\050" ..
"\032\032\085\045\048\048\048\048\069\048\048\048\032\061\032\101\101\032" ..
"\056\048\032\056\048\032\061\032\034\238\128\128\034\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\050\046\051\046\051\032\032\085\045\048\048\048\048" ..
"\070\070\070\068\032\061\032\101\102\032\098\102\032\098\100\032\061\032" ..
"\034\239\191\189\034\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\050\046\051" ..
"\046\052\032\032\085\045\048\048\049\048\070\070\070\070\032\061\032\102" ..
"\052\032\056\102\032\098\102\032\098\102\032\061\032\034\244\143\191\191" ..
"\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\124\010\050\046\051\046\053\032\032\085\045\048" ..
"\048\049\049\048\048\048\048\032\061\032\102\052\032\057\048\032\056\048" ..
"\032\056\048\032\061\032\034\244\144\128\128\034\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\051\032\032\077\097\108\102\111\114" ..
"\109\101\100\032\115\101\113\117\101\110\099\101\115\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\051\046\049\032\032\085\110\101\120\112\101" ..
"\099\116\101\100\032\099\111\110\116\105\110\117\097\116\105\111\110\032" ..
"\098\121\116\101\115\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\069\097\099\104\032\117\110\101\120\112\101\099\116" ..
"\101\100\032\099\111\110\116\105\110\117\097\116\105\111\110\032\098\121" ..
"\116\101\032\115\104\111\117\108\100\032\098\101\032\115\101\112\097\114" ..
"\097\116\101\108\121\032\115\105\103\110\097\108\108\101\100\032\097\115" ..
"\032\097\032\032\032\032\032\032\032\032\032\124\010\109\097\108\102\111" ..
"\114\109\101\100\032\115\101\113\117\101\110\099\101\032\111\102\032\105" ..
"\116\115\032\111\119\110\046\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\051\046\049\046\049\032\032" ..
"\070\105\114\115\116\032\099\111\110\116\105\110\117\097\116\105\111\110" ..
"\032\098\121\116\101\032\048\120\056\048\058\032\034\128\034\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\051\046\049\046\050\032\032\076\097\115\116\032\032\099\111\110\116" ..
"\105\110\117\097\116\105\111\110\032\098\121\116\101\032\048\120\098\102" ..
"\058\032\034\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\051" ..
"\046\049\046\051\032\032\050\032\099\111\110\116\105\110\117\097\116\105" ..
"\111\110\032\098\121\116\101\115\058\032\034\128\191\034\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\051\046\049\046\052\032\032\051\032\099\111" ..
"\110\116\105\110\117\097\116\105\111\110\032\098\121\116\101\115\058\032" ..
"\034\128\191\128\034\032\032\032\032\032\032\032\032\032\032\032\032\032"
end)() .. (function() return
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\051\046\049" ..
"\046\053\032\032\052\032\099\111\110\116\105\110\117\097\116\105\111\110" ..
"\032\098\121\116\101\115\058\032\034\128\191\128\191\034\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\051\046\049\046\054\032\032\053\032\099\111\110\116" ..
"\105\110\117\097\116\105\111\110\032\098\121\116\101\115\058\032\034\128" ..
"\191\128\191\128\034\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\051\046\049\046\055" ..
"\032\032\054\032\099\111\110\116\105\110\117\097\116\105\111\110\032\098" ..
"\121\116\101\115\058\032\034\128\191\128\191\128\191\034\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\051\046\049\046\056\032\032\055\032\099\111\110\116\105\110" ..
"\117\097\116\105\111\110\032\098\121\116\101\115\058\032\034\128\191\128" ..
"\191\128\191\128\034\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\051\046\049\046\057\032\032\083\101\113\117\101\110\099\101\032\111" ..
"\102\032\097\108\108\032\054\052\032\112\111\115\115\105\098\108\101\032" ..
"\099\111\110\116\105\110\117\097\116\105\111\110\032\098\121\116\101\115" ..
"\032\040\048\120\056\048\045\048\120\098\102\041\058\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032" ..
"\032\032\034\128\129\130\131\132\133\134\135\136\137\138\139\140\141\142" ..
"\143\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\032\032\032\032\144\145\146\147\148\149\150" ..
"\151\152\153\154\155\156\157\158\159\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\160\161\162\163\164\165\166\167\168\169\170\171\172\173\174\175\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\032\032\032\032\176\177\178\179\180\181\182\183\184" ..
"\185\186\187\188\189\190\191\034\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\051\046\050\032\032\076\111\110\101\108\121\032\115\116\097" ..
"\114\116\032\099\104\097\114\097\099\116\101\114\115\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\051\046\050\046\049\032\032\065\108\108\032\051\050\032\102\105\114" ..
"\115\116\032\098\121\116\101\115\032\111\102\032\050\045\098\121\116\101" ..
"\032\115\101\113\117\101\110\099\101\115\032\040\048\120\099\048\045\048" ..
"\120\100\102\041\044\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\101\097" ..
"\099\104\032\102\111\108\108\111\119\101\100\032\098\121\032\097\032\115" ..
"\112\097\099\101\032\099\104\097\114\097\099\116\101\114\058\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\032\032\032\034\192\032\193\032\194\032\195" ..
"\032\196\032\197\032\198\032\199\032\200\032\201\032\202\032\203\032\204" ..
"\032\205\032\206\032\207\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\208\032\209\032\210\032\211\032\212\032\213\032\214\032\215\032\216" ..
"\032\217\032\218\032\219\032\220\032\221\032\222\032\223\032\034\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\051\046\050\046\050" ..
"\032\032\065\108\108\032\049\054\032\102\105\114\115\116\032\098\121\116" ..
"\101\115\032\111\102\032\051\045\098\121\116\101\032\115\101\113\117\101" ..
"\110\099\101\115\032\040\048\120\101\048\045\048\120\101\102\041\044\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\032\032\032\032\032\032\032\101\097\099\104\032\102\111\108" ..
"\108\111\119\101\100\032\098\121\032\097\032\115\112\097\099\101\032\099" ..
"\104\097\114\097\099\116\101\114\058\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\034\224\032\225\032\226\032\227\032\228\032\229\032\230" ..
"\032\231\032\232\032\233\032\234\032\235\032\236\032\237\032\238\032\239" ..
"\032\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\051" ..
"\046\050\046\051\032\032\065\108\108\032\056\032\102\105\114\115\116\032" ..
"\098\121\116\101\115\032\111\102\032\052\045\098\121\116\101\032\115\101" ..
"\113\117\101\110\099\101\115\032\040\048\120\102\048\045\048\120\102\055" ..
"\041\044\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\032\032\032\032\032\032\032\101\097\099\104" ..
"\032\102\111\108\108\111\119\101\100\032\098\121\032\097\032\115\112\097" ..
"\099\101\032\099\104\097\114\097\099\116\101\114\058\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\032\032\032\034\240\032\241\032\242\032\243\032\244" ..
"\032\245\032\246\032\247\032\034\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\051\046\050\046\052\032\032\065\108\108\032\052\032\102\105" ..
"\114\115\116\032\098\121\116\101\115\032\111\102\032\053\045\098\121\116" ..
"\101\032\115\101\113\117\101\110\099\101\115\032\040\048\120\102\056\045" ..
"\048\120\102\098\041\044\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032" ..
"\101\097\099\104\032\102\111\108\108\111\119\101\100\032\098\121\032\097" ..
"\032\115\112\097\099\101\032\099\104\097\114\097\099\116\101\114\058\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\032\032\032\034\248\032\249\032\250" ..
"\032\251\032\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\051\046\050\046\053\032\032\065\108\108\032" ..
"\050\032\102\105\114\115\116\032\098\121\116\101\115\032\111\102\032\054" ..
"\045\098\121\116\101\032\115\101\113\117\101\110\099\101\115\032\040\048" ..
"\120\102\099\045\048\120\102\100\041\044\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\032\032\032\101\097\099\104\032\102\111\108\108\111\119\101\100\032" ..
"\098\121\032\097\032\115\112\097\099\101\032\099\104\097\114\097\099\116" ..
"\101\114\058\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032\034\252" ..
"\032\253\032\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\051\046\051\032\032\083\101" ..
"\113\117\101\110\099\101\115\032\119\105\116\104\032\108\097\115\116\032" ..
"\099\111\110\116\105\110\117\097\116\105\111\110\032\098\121\116\101\032" ..
"\109\105\115\115\105\110\103\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\065\108\108\032\098\121\116\101\115" ..
"\032\111\102\032\097\110\032\105\110\099\111\109\112\108\101\116\101\032" ..
"\115\101\113\117\101\110\099\101\032\115\104\111\117\108\100\032\098\101" ..
"\032\115\105\103\110\097\108\108\101\100\032\097\115\032\097\032\115\105"
end)() .. (function() return
"\110\103\108\101\032\032\032\032\032\032\032\032\032\032\032\124\010\109" ..
"\097\108\102\111\114\109\101\100\032\115\101\113\117\101\110\099\101\044" ..
"\032\105\046\101\046\044\032\121\111\117\032\115\104\111\117\108\100\032" ..
"\115\101\101\032\111\110\108\121\032\097\032\115\105\110\103\108\101\032" ..
"\114\101\112\108\097\099\101\109\101\110\116\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\099\104\097\114\097\099\116\101\114\032\105" ..
"\110\032\101\097\099\104\032\111\102\032\116\104\101\032\110\101\120\116" ..
"\032\049\048\032\116\101\115\116\115\046\032\040\067\104\097\114\097\099" ..
"\116\101\114\115\032\097\115\032\105\110\032\115\101\099\116\105\111\110" ..
"\032\050\041\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\051\046\051\046\049\032\032\050\045\098\121\116\101" ..
"\032\115\101\113\117\101\110\099\101\032\119\105\116\104\032\108\097\115" ..
"\116\032\098\121\116\101\032\109\105\115\115\105\110\103\032\040\085\043" ..
"\048\048\048\048\041\058\032\032\032\032\032\034\192\034\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\051\046\051\046\050" ..
"\032\032\051\045\098\121\116\101\032\115\101\113\117\101\110\099\101\032" ..
"\119\105\116\104\032\108\097\115\116\032\098\121\116\101\032\109\105\115" ..
"\115\105\110\103\032\040\085\043\048\048\048\048\041\058\032\032\032\032" ..
"\032\034\224\128\034\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\124\010\051\046\051\046\051\032\032\052\045\098\121\116\101\032" ..
"\115\101\113\117\101\110\099\101\032\119\105\116\104\032\108\097\115\116" ..
"\032\098\121\116\101\032\109\105\115\115\105\110\103\032\040\085\043\048" ..
"\048\048\048\041\058\032\032\032\032\032\034\240\128\128\034\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\124\010\051\046\051\046" ..
"\052\032\032\053\045\098\121\116\101\032\115\101\113\117\101\110\099\101" ..
"\032\119\105\116\104\032\108\097\115\116\032\098\121\116\101\032\109\105" ..
"\115\115\105\110\103\032\040\085\043\048\048\048\048\041\058\032\032\032" ..
"\032\032\034\248\128\128\128\034\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\051\046\051\046\053\032\032\054\045\098\121" ..
"\116\101\032\115\101\113\117\101\110\099\101\032\119\105\116\104\032\108" ..
"\097\115\116\032\098\121\116\101\032\109\105\115\115\105\110\103\032\040" ..
"\085\043\048\048\048\048\041\058\032\032\032\032\032\034\252\128\128\128" ..
"\128\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\051\046\051\046\054\032\032\050\045\098\121\116\101\032\115\101\113" ..
"\117\101\110\099\101\032\119\105\116\104\032\108\097\115\116\032\098\121" ..
"\116\101\032\109\105\115\115\105\110\103\032\040\085\045\048\048\048\048" ..
"\048\055\070\070\041\058\032\034\223\034\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\051\046\051\046\055\032\032\051\045" ..
"\098\121\116\101\032\115\101\113\117\101\110\099\101\032\119\105\116\104" ..
"\032\108\097\115\116\032\098\121\116\101\032\109\105\115\115\105\110\103" ..
"\032\040\085\045\048\048\048\048\070\070\070\070\041\058\032\034\239\191" ..
"\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\051\046\051\046\056\032\032\052\045\098\121\116\101\032\115\101\113\117" ..
"\101\110\099\101\032\119\105\116\104\032\108\097\115\116\032\098\121\116" ..
"\101\032\109\105\115\115\105\110\103\032\040\085\045\048\048\049\070\070" ..
"\070\070\070\041\058\032\034\247\191\191\034\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\124\010\051\046\051\046\057\032\032\053" ..
"\045\098\121\116\101\032\115\101\113\117\101\110\099\101\032\119\105\116" ..
"\104\032\108\097\115\116\032\098\121\116\101\032\109\105\115\115\105\110" ..
"\103\032\040\085\045\048\051\070\070\070\070\070\070\041\058\032\034\251" ..
"\191\191\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\051\046\051\046\049\048\032\054\045\098\121\116\101\032\115" ..
"\101\113\117\101\110\099\101\032\119\105\116\104\032\108\097\115\116\032" ..
"\098\121\116\101\032\109\105\115\115\105\110\103\032\040\085\045\055\070" ..
"\070\070\070\070\070\070\041\058\032\034\253\191\191\191\191\034\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\051\046\052\032\032\067\111\110\099\097\116\101\110" ..
"\097\116\105\111\110\032\111\102\032\105\110\099\111\109\112\108\101\116" ..
"\101\032\115\101\113\117\101\110\099\101\115\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\065\108\108\032\116\104\101\032\049\048\032\115\101\113\117" ..
"\101\110\099\101\115\032\111\102\032\051\046\051\032\099\111\110\099\097" ..
"\116\101\110\097\116\101\100\044\032\121\111\117\032\115\104\111\117\108" ..
"\100\032\115\101\101\032\049\048\032\109\097\108\102\111\114\109\101\100" ..
"\032\032\032\032\032\032\032\032\032\124\010\115\101\113\117\101\110\099" ..
"\101\115\032\098\101\105\110\103\032\115\105\103\110\097\108\108\101\100" ..
"\058\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\032\032\032\034\192\224\128\240\128" ..
"\128\248\128\128\128\252\128\128\128\128\223\239\191\247\191\191\251\191" ..
"\191\191\253\191\191\191\191\034\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\051\046\053\032\032\073\109\112\111" ..
"\115\115\105\098\108\101\032\098\121\116\101\115\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\084\104\101\032\102\111\108\108\111\119\105" ..
"\110\103\032\116\119\111\032\098\121\116\101\115\032\099\097\110\110\111" ..
"\116\032\097\112\112\101\097\114\032\105\110\032\097\032\099\111\114\114" ..
"\101\099\116\032\085\084\070\045\056\032\115\116\114\105\110\103\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\051\046\053\046\049\032\032\102\101\032\061\032\034" ..
"\254\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\051\046\053\046\050" ..
"\032\032\102\102\032\061\032\034\255\034\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\051\046\053\046\051\032\032\102\101\032\102\101\032\102\102" ..
"\032\102\102\032\061\032\034\254\254\255\255\034\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\052\032\032\079\118\101\114\108\111\110\103\032\115\101\113\117\101" ..
"\110\099\101\115\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\084" ..
"\104\101\032\102\111\108\108\111\119\105\110\103\032\115\101\113\117\101" ..
"\110\099\101\115\032\097\114\101\032\110\111\116\032\109\097\108\102\111" ..
"\114\109\101\100\032\097\099\099\111\114\100\105\110\103\032\116\111\032" ..
"\116\104\101\032\108\101\116\116\101\114\032\111\102\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\116\104\101\032\085\110\105\099\111\100\101" ..
"\032\050\046\048\032\115\116\097\110\100\097\114\100\046\032\072\111\119" ..
"\101\118\101\114\044\032\116\104\101\121\032\097\114\101\032\108\111\110" ..
"\103\101\114\032\116\104\101\110\032\110\101\099\101\115\115\097\114\121" ..
"\032\097\110\100\032\032\032\032\032\032\032\032\032\124\010\097\032\099" ..
"\111\114\114\101\099\116\032\085\084\070\045\056\032\101\110\099\111\100" ..
"\101\114\032\105\115\032\110\111\116\032\097\108\108\111\119\101\100\032" ..
"\116\111\032\112\114\111\100\117\099\101\032\116\104\101\109\046\032\065" ..
"\032\034\115\097\102\101\032\085\084\070\045\056\032\032\032\032\032\032" ..
"\032\032\032\124\010\100\101\099\111\100\101\114\034\032\115\104\111\117" ..
"\108\100\032\114\101\106\101\099\116\032\116\104\101\109\032\106\117\115" ..
"\116\032\108\105\107\101\032\109\097\108\102\111\114\109\101\100\032\115" ..
"\101\113\117\101\110\099\101\115\032\102\111\114\032\116\119\111\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\124\010\114\101\097\115\111" ..
"\110\115\058\032\040\049\041\032\073\116\032\104\101\108\112\115\032\116" ..
"\111\032\100\101\098\117\103\032\097\112\112\108\105\099\097\116\105\111" ..
"\110\115\032\105\102\032\111\118\101\114\108\111\110\103\032\115\101\113" ..
"\117\101\110\099\101\115\032\097\114\101\032\032\032\032\032\032\032\032" ..
"\032\124\010\110\111\116\032\116\114\101\097\116\101\100\032\097\115\032" ..
"\118\097\108\105\100\032\114\101\112\114\101\115\101\110\116\097\116\105" ..
"\111\110\115\032\111\102\032\099\104\097\114\097\099\116\101\114\115\044" ..
"\032\098\101\099\097\117\115\101\032\116\104\105\115\032\104\101\108\112" ..
"\115\032\032\032\032\032\032\032\032\124\010\116\111\032\115\112\111\116" ..
"\032\112\114\111\098\108\101\109\115\032\109\111\114\101\032\113\117\105" ..
"\099\107\108\121\046\032\040\050\041\032\079\118\101\114\108\111\110\103" ..
"\032\115\101\113\117\101\110\099\101\115\032\112\114\111\118\105\100\101" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\097\108\116\101\114\110\097\116\105\118\101\032\114\101\112\114\101" ..
"\115\101\110\116\097\116\105\111\110\115\032\111\102\032\099\104\097\114" ..
"\097\099\116\101\114\115\044\032\116\104\097\116\032\099\111\117\108\100" ..
"\032\109\097\108\105\099\105\111\117\115\108\121\032\098\101\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\117\115\101\100\032\116\111\032\098" ..
"\121\112\097\115\115\032\102\105\108\116\101\114\115\032\116\104\097\116" ..
"\032\099\104\101\099\107\032\111\110\108\121\032\102\111\114\032\065\083" ..
"\067\073\073\032\099\104\097\114\097\099\116\101\114\115\046\032\070\111" ..
"\114\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\105" ..
"\110\115\116\097\110\099\101\044\032\097\032\050\045\098\121\116\101\032" ..
"\101\110\099\111\100\101\100\032\108\105\110\101\032\102\101\101\100\032" ..
"\040\076\070\041\032\119\111\117\108\100\032\110\111\116\032\098\101\032" ..
"\099\097\117\103\104\116\032\098\121\032\097\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\108\105\110\101\032\099\111\117\110\116\101" ..
"\114\032\116\104\097\116\032\099\111\117\110\116\115\032\111\110\108\121" ..
"\032\048\120\048\097\032\098\121\116\101\115\044\032\098\117\116\032\105" ..
"\116\032\119\111\117\108\100\032\115\116\105\108\108\032\098\101\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\112\114\111" ..
"\099\101\115\115\101\100\032\097\115\032\097\032\108\105\110\101\032\102"
end)() .. (function() return
"\101\101\100\032\098\121\032\097\110\032\117\110\115\097\102\101\032\085" ..
"\084\070\045\056\032\100\101\099\111\100\101\114\032\108\097\116\101\114" ..
"\032\105\110\032\116\104\101\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\112\105\112\101\108\105\110\101\046\032\070\114\111" ..
"\109\032\097\032\115\101\099\117\114\105\116\121\032\112\111\105\110\116" ..
"\032\111\102\032\118\105\101\119\044\032\065\083\067\073\073\032\099\111" ..
"\109\112\097\116\105\098\105\108\105\116\121\032\111\102\032\085\084\070" ..
"\045\056\032\032\032\032\032\032\032\032\032\124\010\115\101\113\117\101" ..
"\110\099\101\115\032\109\101\097\110\115\032\097\108\115\111\044\032\116" ..
"\104\097\116\032\065\083\067\073\073\032\099\104\097\114\097\099\116\101" ..
"\114\115\032\097\114\101\032\042\111\110\108\121\042\032\097\108\108\111" ..
"\119\101\100\032\116\111\032\098\101\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\114\101\112\114\101\115\101\110\116\101\100\032\098\121\032" ..
"\065\083\067\073\073\032\098\121\116\101\115\032\105\110\032\116\104\101" ..
"\032\114\097\110\103\101\032\048\120\048\048\045\048\120\055\102\046\032" ..
"\084\111\032\101\110\115\117\114\101\032\116\104\105\115\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\097\115\112\101\099\116\032" ..
"\111\102\032\065\083\067\073\073\032\099\111\109\112\097\116\105\098\105" ..
"\108\105\116\121\044\032\117\115\101\032\111\110\108\121\032\034\115\097" ..
"\102\101\032\085\084\070\045\056\032\100\101\099\111\100\101\114\115\034" ..
"\032\116\104\097\116\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\114\101\106\101\099\116\032\111\118\101\114\108\111\110\103\032\085" ..
"\084\070\045\056\032\115\101\113\117\101\110\099\101\115\032\102\111\114" ..
"\032\119\104\105\099\104\032\097\032\115\104\111\114\116\101\114\032\101" ..
"\110\099\111\100\105\110\103\032\101\120\105\115\116\115\046\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\052" ..
"\046\049\032\032\069\120\097\109\112\108\101\115\032\111\102\032\097\110" ..
"\032\111\118\101\114\108\111\110\103\032\065\083\067\073\073\032\099\104" ..
"\097\114\097\099\116\101\114\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\087\105\116" ..
"\104\032\097\032\115\097\102\101\032\085\084\070\045\056\032\100\101\099" ..
"\111\100\101\114\044\032\097\108\108\032\111\102\032\116\104\101\032\102" ..
"\111\108\108\111\119\105\110\103\032\102\105\118\101\032\111\118\101\114" ..
"\108\111\110\103\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\114\101\112\114\101\115\101\110\116\097\116\105\111" ..
"\110\115\032\111\102\032\116\104\101\032\065\083\067\073\073\032\099\104" ..
"\097\114\097\099\116\101\114\032\115\108\097\115\104\032\040\034\047\034" ..
"\041\032\115\104\111\117\108\100\032\098\101\032\114\101\106\101\099\116" ..
"\101\100\032\032\032\032\032\032\032\032\032\124\010\108\105\107\101\032" ..
"\097\032\109\097\108\102\111\114\109\101\100\032\085\084\070\045\056\032" ..
"\115\101\113\117\101\110\099\101\044\032\102\111\114\032\105\110\115\116" ..
"\097\110\099\101\032\098\121\032\115\117\098\115\116\105\116\117\116\105" ..
"\110\103\032\105\116\032\119\105\116\104\032\032\032\032\032\032\032\032" ..
"\032\124\010\097\032\114\101\112\108\097\099\101\109\101\110\116\032\099" ..
"\104\097\114\097\099\116\101\114\046\032\073\102\032\121\111\117\032\115" ..
"\101\101\032\097\032\115\108\097\115\104\032\098\101\108\111\119\044\032" ..
"\121\111\117\032\100\111\032\110\111\116\032\104\097\118\101\032\097\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\115\097\102\101\032\085\084" ..
"\070\045\056\032\100\101\099\111\100\101\114\033\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\052\046\049\046\049\032\085\043\048" ..
"\048\050\070\032\061\032\099\048\032\097\102\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\061\032\034\192\175\034\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\052\046\049\046\050\032\085\043\048\048\050\070\032\061\032\101\048\032" ..
"\056\048\032\097\102\032\032\032\032\032\032\032\032\032\032\061\032\034" ..
"\224\128\175\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\124\010\052\046\049\046\051\032\085\043" ..
"\048\048\050\070\032\061\032\102\048\032\056\048\032\056\048\032\097\102" ..
"\032\032\032\032\032\032\032\061\032\034\240\128\128\175\034\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\052\046\049\046\052\032\085\043\048\048\050\070\032\061\032" ..
"\102\056\032\056\048\032\056\048\032\056\048\032\097\102\032\032\032\032" ..
"\061\032\034\248\128\128\128\175\034\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\052\046\049" ..
"\046\053\032\085\043\048\048\050\070\032\061\032\102\099\032\056\048\032" ..
"\056\048\032\056\048\032\056\048\032\097\102\032\061\032\034\252\128\128" ..
"\128\128\175\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\052\046\050\032\032\077\097\120\105\109\117\109\032\111\118\101\114\108" ..
"\111\110\103\032\115\101\113\117\101\110\099\101\115\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\066\101" ..
"\108\111\119\032\121\111\117\032\115\101\101\032\116\104\101\032\104\105" ..
"\103\104\101\115\116\032\085\110\105\099\111\100\101\032\118\097\108\117" ..
"\101\032\116\104\097\116\032\105\115\032\115\116\105\108\108\032\114\101" ..
"\115\117\108\116\105\110\103\032\105\110\032\097\110\032\032\032\032\032" ..
"\032\032\032\032\124\010\111\118\101\114\108\111\110\103\032\115\101\113" ..
"\117\101\110\099\101\032\105\102\032\114\101\112\114\101\115\101\110\116" ..
"\101\100\032\119\105\116\104\032\116\104\101\032\103\105\118\101\110\032" ..
"\110\117\109\098\101\114\032\111\102\032\098\121\116\101\115\046\032\084" ..
"\104\105\115\032\032\032\032\032\032\032\032\032\124\010\105\115\032\097" ..
"\032\098\111\117\110\100\097\114\121\032\116\101\115\116\032\102\111\114" ..
"\032\115\097\102\101\032\085\084\070\045\056\032\100\101\099\111\100\101" ..
"\114\115\046\032\065\108\108\032\102\105\118\101\032\099\104\097\114\097" ..
"\099\116\101\114\115\032\115\104\111\117\108\100\032\032\032\032\032\032" ..
"\032\032\124\010\098\101\032\114\101\106\101\099\116\101\100\032\108\105" ..
"\107\101\032\109\097\108\102\111\114\109\101\100\032\085\084\070\045\056" ..
"\032\115\101\113\117\101\110\099\101\115\046\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\124\010\052\046\050\046\049\032\032\085\045\048\048\048\048\048\048\055" ..
"\070\032\061\032\099\049\032\098\102\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\061\032\034\193\191\034\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\052\046\050\046\050\032\032" ..
"\085\045\048\048\048\048\048\055\070\070\032\061\032\101\048\032\057\102" ..
"\032\098\102\032\032\032\032\032\032\032\032\032\032\061\032\034\224\159" ..
"\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\052\046\050\046\051\032\032\085\045\048\048\048\048\070\070" ..
"\070\070\032\061\032\102\048\032\056\102\032\098\102\032\098\102\032\032" ..
"\032\032\032\032\032\061\032\034\240\143\191\191\034\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\124\010\052\046\050\046" ..
"\052\032\032\085\045\048\048\049\070\070\070\070\070\032\061\032\102\056" ..
"\032\056\055\032\098\102\032\098\102\032\098\102\032\032\032\032\061\032" ..
"\034\248\135\191\191\191\034\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\124\010\052\046\050\046\053\032\032\085\045\048" ..
"\051\070\070\070\070\070\070\032\061\032\102\099\032\056\051\032\098\102" ..
"\032\098\102\032\098\102\032\098\102\032\061\032\034\252\131\191\191\191" ..
"\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\052\046\051\032\032\079\118" ..
"\101\114\108\111\110\103\032\114\101\112\114\101\115\101\110\116\097\116" ..
"\105\111\110\032\111\102\032\116\104\101\032\078\085\076\032\099\104\097" ..
"\114\097\099\116\101\114\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124" ..
"\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\124\010\084\104\101\032\102\111\108\108\111" ..
"\119\105\110\103\032\102\105\118\101\032\115\101\113\117\101\110\099\101" ..
"\115\032\115\104\111\117\108\100\032\097\108\115\111\032\098\101\032\114" ..
"\101\106\101\099\116\101\100\032\108\105\107\101\032\109\097\108\102\111" ..
"\114\109\101\100\032\032\032\032\032\032\032\032\032\032\032\124\010\085" ..
"\084\070\045\056\032\115\101\113\117\101\110\099\101\115\032\097\110\100" ..
"\032\115\104\111\117\108\100\032\110\111\116\032\098\101\032\116\114\101" ..
"\097\116\101\100\032\108\105\107\101\032\116\104\101\032\065\083\067\073" ..
"\073\032\078\085\076\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\124\010\099\104\097\114\097\099\116\101\114\046\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\124\010\052\046\051\046\049\032\032\085\043\048\048\048\048" ..
"\032\061\032\099\048\032\056\048\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\061\032\034\192\128\034\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\124\010\052\046\051\046" ..
"\050\032\032\085\043\048\048\048\048\032\061\032\101\048\032\056\048\032" ..
"\056\048\032\032\032\032\032\032\032\032\032\032\061\032\034\224\128\128" ..
"\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\124\010\052\046\051\046\051\032\032\085\043\048\048\048" ..
"\048\032\061\032\102\048\032\056\048\032\056\048\032\056\048\032\032\032" ..
"\032\032\032\032\061\032\034\240\128\128\128\034\032\032\032\032\032\032"
end)() .. (function() return
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\052" ..
"\046\051\046\052\032\032\085\043\048\048\048\048\032\061\032\102\056\032" ..
"\056\048\032\056\048\032\056\048\032\056\048\032\032\032\032\061\032\034" ..
"\248\128\128\128\128\034\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\124\010\052\046\051\046\053\032\032" ..
"\085\043\048\048\048\048\032\061\032\102\099\032\056\048\032\056\048\032" ..
"\056\048\032\056\048\032\056\048\032\061\032\034\252\128\128\128\128\128" ..
"\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\124\010\053\032\032\073" ..
"\108\108\101\103\097\108\032\099\111\100\101\032\112\111\115\105\116\105" ..
"\111\110\115\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\124\010\084\104\101\032\102\111" ..
"\108\108\111\119\105\110\103\032\085\084\070\045\056\032\115\101\113\117" ..
"\101\110\099\101\115\032\115\104\111\117\108\100\032\098\101\032\114\101" ..
"\106\101\099\116\101\100\032\108\105\107\101\032\109\097\108\102\111\114" ..
"\109\101\100\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\124\010\115\101\113\117\101\110\099\101\115\044\032\098\101\099\097\117" ..
"\115\101\032\116\104\101\121\032\110\101\118\101\114\032\114\101\112\114" ..
"\101\115\101\110\116\032\118\097\108\105\100\032\073\083\079\032\049\048" ..
"\054\052\054\032\099\104\097\114\097\099\116\101\114\115\032\097\110\100" ..
"\032\032\032\032\032\032\032\032\124\010\097\032\085\084\070\045\056\032" ..
"\100\101\099\111\100\101\114\032\116\104\097\116\032\097\099\099\101\112" ..
"\116\115\032\116\104\101\109\032\109\105\103\104\116\032\105\110\116\114" ..
"\111\100\117\099\101\032\115\101\099\117\114\105\116\121\032\112\114\111" ..
"\098\108\101\109\115\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\099\111\109\112\097\114\097\098\108\101\032\116\111\032\111\118\101\114" ..
"\108\111\110\103\032\085\084\070\045\056\032\115\101\113\117\101\110\099" ..
"\101\115\046\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\053\046" ..
"\049\032\083\105\110\103\108\101\032\085\084\070\045\049\054\032\115\117" ..
"\114\114\111\103\097\116\101\115\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\124\010\053\046\049\046" ..
"\049\032\032\085\043\068\056\048\048\032\061\032\101\100\032\097\048\032" ..
"\056\048\032\061\032\034\237\160\128\034\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\124\010\053\046\049\046\050\032\032\085\043\068\066\055" ..
"\070\032\061\032\101\100\032\097\100\032\098\102\032\061\032\034\237\173" ..
"\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010\053\046" ..
"\049\046\051\032\032\085\043\068\066\056\048\032\061\032\101\100\032\097" ..
"\101\032\056\048\032\061\032\034\237\174\128\034\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\124\010\053\046\049\046\052\032\032\085\043\068" ..
"\066\070\070\032\061\032\101\100\032\097\102\032\098\102\032\061\032\034" ..
"\237\175\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\053\046\049\046\053\032\032\085\043\068\067\048\048\032\061\032\101\100" ..
"\032\098\048\032\056\048\032\061\032\034\237\176\128\034\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\124\010\053\046\049\046\054\032\032\085" ..
"\043\068\070\056\048\032\061\032\101\100\032\098\101\032\056\048\032\061" ..
"\032\034\237\190\128\034\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\124\010\053\046\049\046\055\032\032\085\043\068\070\070\070\032\061\032" ..
"\101\100\032\098\102\032\098\102\032\061\032\034\237\191\191\034\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\124\010\053\046\050\032\080\097\105\114\101\100\032\085\084\070\045\049" ..
"\054\032\115\117\114\114\111\103\097\116\101\115\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\124\010\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\053\046\050\046\049\032\032\085\043\068\056\048\048\032\085\043\068\067" ..
"\048\048\032\061\032\101\100\032\097\048\032\056\048\032\101\100\032\098" ..
"\048\032\056\048\032\061\032\034\237\160\128\237\176\128\034\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\124\010\053\046\050\046\050\032" ..
"\032\085\043\068\056\048\048\032\085\043\068\070\070\070\032\061\032\101" ..
"\100\032\097\048\032\056\048\032\101\100\032\098\102\032\098\102\032\061" ..
"\032\034\237\160\128\237\191\191\034\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\124\010\053\046\050\046\051\032\032\085\043\068\066\055" ..
"\070\032\085\043\068\067\048\048\032\061\032\101\100\032\097\100\032\098" ..
"\102\032\101\100\032\098\048\032\056\048\032\061\032\034\237\173\191\237" ..
"\176\128\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\053\046\050\046\052\032\032\085\043\068\066\055\070\032\085\043\068\070" ..
"\070\070\032\061\032\101\100\032\097\100\032\098\102\032\101\100\032\098" ..
"\102\032\098\102\032\061\032\034\237\173\191\237\191\191\034\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\124\010\053\046\050\046\053\032" ..
"\032\085\043\068\066\056\048\032\085\043\068\067\048\048\032\061\032\101" ..
"\100\032\097\101\032\056\048\032\101\100\032\098\048\032\056\048\032\061" ..
"\032\034\237\174\128\237\176\128\034\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\124\010\053\046\050\046\054\032\032\085\043\068\066\056" ..
"\048\032\085\043\068\070\070\070\032\061\032\101\100\032\097\101\032\056" ..
"\048\032\101\100\032\098\102\032\098\102\032\061\032\034\237\174\128\237" ..
"\191\191\034\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\124\010" ..
"\053\046\050\046\055\032\032\085\043\068\066\070\070\032\085\043\068\067" ..
"\048\048\032\061\032\101\100\032\097\102\032\098\102\032\101\100\032\098" ..
"\048\032\056\048\032\061\032\034\237\175\191\237\176\128\034\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\124\010\053\046\050\046\056\032" ..
"\032\085\043\068\066\070\070\032\085\043\068\070\070\070\032\061\032\101" ..
"\100\032\097\102\032\098\102\032\101\100\032\098\102\032\098\102\032\061" ..
"\032\034\237\175\191\237\191\191\034\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\124\010\053\046\051\032" ..
"\079\116\104\101\114\032\105\108\108\101\103\097\108\032\099\111\100\101" ..
"\032\112\111\115\105\116\105\111\110\115\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\124\010\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\124\010\053\046\051\046\049\032" ..
"\032\085\043\070\070\070\069\032\061\032\101\102\032\098\102\032\098\101" ..
"\032\061\032\034\239\191\190\034\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\124\010\053\046\051\046\050\032\032\085\043\070\070\070\070\032" ..
"\061\032\101\102\032\098\102\032\098\102\032\061\032\034\239\191\191\034" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\124\010\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\124\010\084\072\069\032\069\078\068\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032\032" ..
"\032\032\032\032\032\032\032\032\032\032\124\010"
end)()

--------------------------------------------------------------------------------

for LOAD_NAME, LOAD in pairs { C = luatexts.load, LUA = luatexts_lua.load } do
  for NAME, NL in pairs {
      [LOAD_NAME .. "-" .. "LF"] = "\n", [LOAD_NAME .. "-" .. "CRLF"] = "\r\n"
    }
  do
    print("===== BEGIN core tests", NAME, "=====")

    ensure_fails_with_substring(
        "load without args",
        function() return LOAD() end,
        "bad argument #1 to '.-' %(string expected.-%)"
      )

    ensure_error_with_substring(
        "empty string",
        "load failed: ",
        LOAD('')
      )

    ensure_returns(
        "zero-sized tuple " .. NAME,
        1, { true },
        LOAD('0' .. NL)
      )

    ensure_returns(
        "zero-sized tuple tail garbage ignored" .. NAME,
        1, { true },
        LOAD('0' .. NL .. "yada yada!")
      )

    ensure_error_with_substring(
        "no data " .. NAME,
        "load failed: ",
        LOAD('' .. NL)
      )

    ensure_error_with_substring(
        "negative size " .. NAME,
        "load failed: ",
        LOAD('-1' .. NL)
      )

    ensure_error_with_substring(
        "tuple size too large (empty) " .. NAME,
        "load failed: ",
        LOAD('1' .. NL)
      )

    ensure_error_with_substring(
        "tuple size, no newline",
        "load failed: ",
        LOAD('1')
      )

    ensure_returns(
        "nil " .. NAME,
        2, { true, nil },
        LOAD('1' .. NL .. '-' .. NL)
      )

    ensure_error_with_substring(
        "no newline after type " .. NAME,
        "load failed: ",
        LOAD('1' .. NL .. '-')
      )
    ensure_error_with_substring(
        "tuple size too large (nil) " .. NAME,
        "load failed: ",
        LOAD('2' .. NL .. '-' .. NL)
      )

    ensure_error_with_substring(
        "fractional tuple size " .. NAME,
        "load failed: ",
        LOAD('3.14' .. NL .. '-' .. NL)
      )

    ensure_error_with_substring(
        "bad type " .. NAME,
        "load failed: ",
        LOAD('1' .. NL .. 'X' .. NL)
      )

    ensure_error_with_substring(
        "no newline after type " .. NAME,
        "load failed: ",
        LOAD('1' .. NL .. '-')
      )

    ensure_error_with_substring(
        "no newline after type and garbage " .. NAME,
        "load failed: ",
        LOAD('1' .. NL .. '- yada yada')
      )

    ensure_returns(
        "nil tail garbage ignored " .. NAME,
        2, { true, nil },
        LOAD('1' .. NL .. '-' .. NL .. "yada yada!")
      )

    ensure_returns(
        "false " .. NAME,
        2, { true, false },
        LOAD('1' .. NL .. '0' .. NL)
      )

    ensure_returns(
        "true " .. NAME,
        2, { true, true },
        LOAD('1' .. NL .. '1' .. NL)
      )

    ensure_returns(
        "true-nil-false " .. NAME,
        4, { true, true, nil, false },
        LOAD(
            '3' .. NL
         .. '1' .. NL
         .. '-' .. NL
         .. '0' .. NL
          )
      )

    print("===== END core tests", NAME, "=====")

    for _, BASE in ipairs({ "U", "H", "Z" }) do
      local PARAM =
      ({
        U =
        {
          max = '4294967295', trunc = '4294967296';
          noneg = true, notrunc = true;
        };
        H =
        {
          max = 'FFFFFFFF', trunc = '100000000';
          noneg = true, notrunc = true;
        };
        Z =
        {
          max = '1Z141Z3', trunc = '1Z141Z4';
          noneg = true, notrunc = true;
        };
      })[BASE]

      local NAME = BASE .. " " .. NAME

      print("===== BEGIN uint tests", NAME, "=====")

      ensure_returns(
          "zero uint " .. NAME,
          2, { true, 0 },
          LOAD(
              '1' .. NL
           .. BASE .. NL
             .. '0' .. NL
            )
        )

      ensure_returns(
          "one uint " .. NAME,
          2, { true, 1 },
          LOAD(
              '1' .. NL
           .. BASE .. NL
             .. '1' .. NL
            )
        )

      if not PARAM.noneg then
        -- Implementation detail; should fail actually.
        ensure_returns(
            "negative uint " .. NAME,
            2, { true, 4294967295 }, -- Exact value is an implementation detail
            LOAD(
                '1' .. NL
             .. BASE .. NL
               .. '-1' .. NL
              )
          )
      else
        -- Exact error message is an implementation detail
        ensure_error_with_substring(
            "negative uint " .. NAME,
            "load failed: ",
            LOAD(
                '1' .. NL
             .. BASE .. NL
               .. '-1' .. NL
              )
          )
      end

      ensure_error_with_substring(
          "fractional uint " .. NAME,
          "load failed: ",
          LOAD(
              '1' .. NL
           .. BASE .. NL
             .. '1.1' .. NL
            )
        )

      ensure_error_with_substring(
          "uint: missing newline " .. NAME,
          "load failed: ",
          LOAD(
              '1' .. NL
           .. BASE .. NL
             .. '1'
            )
        )

      ensure_error_with_substring(
          "uint: missing newline and garbage " .. NAME,
          "load failed: ",
          LOAD(
              '1' .. NL
           .. BASE .. NL
             .. '1 yada yada'
            )
        )

      ensure_returns(
          "huge uint " .. NAME,
          2, { true, 4294967295 },
          LOAD(
              '1' .. NL
           .. BASE .. NL
             .. PARAM.max .. NL
            )
        )

      if not PARAM.notrunc then
        -- Implementation detail; should fail actually.
        ensure_returns(
            "huge uint truncated " .. NAME,
            2, { true, 4294967295 }, -- implementation detail
            LOAD(
                '1' .. NL
             .. BASE .. NL
               .. PARAM.trunc .. NL
              )
          )
      else
        ensure_error_with_substring(
            "huge uint: too huge " .. NAME,
            "load failed: ",
            LOAD(
                '1' .. NL
             .. BASE .. NL
               .. PARAM.trunc .. NL
              )
          )
      end

      print("===== END uint tests", NAME, "=====")
    end
    print("===== BEGIN number tests", NAME, "=====")

    ensure_returns(
        "number zero " .. NAME,
        2, { true, 0 },
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. '0' .. NL
          )
      )

    ensure_returns(
        "number one " .. NAME,
        2, { true, 1 },
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. '1' .. NL
          )
      )

    ensure_returns(
        "number pi " .. NAME,
        2, { true, 3.141592653589793115997963468544185161590576171875 },
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. '3.141592653589793115997963468544185161590576171875' .. NL
          )
      )

    ensure_returns(
        "-number pi " .. NAME,
        2, { true, -3.141592653589793115997963468544185161590576171875 },
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. '-3.141592653589793115997963468544185161590576171875' .. NL
          )
      )

    ensure_returns(
        "inf " .. NAME,
        2, { true, 1/0 },
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. 'inf' .. NL
          )
      )

    ensure_returns(
        "-inf " .. NAME,
        2, { true, -1/0 },
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. '-inf' .. NL
          )
      )

    do
      local ok, value = LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. 'nan' .. NL
        )
      ensure_equals("nan ok", ok, true)
      ensure("nan value", value ~= value)
    end

   ensure_error_with_substring(
        "number: garbage " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. '1.1 yada yada!' .. NL
          )
      )

    ensure_error_with_substring(
        "number: missing newline " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. '1.1'
          )
      )

    ensure_error_with_substring(
        "number: missing newline and garbage " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'N' .. NL
           .. '1.1 yada yada'
          )
      )

    print("===== END number tests", NAME, "=====")
    print("===== BEGIN string tests", NAME, "=====")

    ensure_returns(
        "empty string " .. NAME,
        2, { true, "" },
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. '0' .. NL
           .. NL
          )
      )

    ensure_error_with_substring(
        "empty string with data " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. '0' .. NL
           .. 'A' .. NL
          )
      )

    ensure_returns(
        "single char string " .. NAME,
        2, { true, "A" },
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. '1' .. NL
           .. 'A' .. NL
          )
      )

    ensure_returns(
        "\\0 " .. NAME,
        2, { true, "\0" },
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. '1' .. NL
           .. '\0' .. NL
          )
      )

    ensure_returns(
        "Embedded\\0Zero " .. NAME,
        2, { true, "Embedded\0Zero" },
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. '13' .. NL
           .. 'Embedded\0Zero' .. NL
          )
      )

    ensure_error_with_substring(
        "empty string no second nl " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. '0' .. NL
          )
      )

    ensure_error_with_substring(
        "string size too large (empty, no nl) " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. '1' .. NL
          )
      )

    ensure_error_with_substring(
        "string size too large (empty, nl) " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. (NL == "\r\n" and '2' or '1') .. NL
           .. NL
          )
      )

    ensure_error_with_substring(
        "string size too large (non-empty) " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'S' .. NL
           .. (NL == "\r\n" and '3' or '2') .. NL
           .. 'A' .. NL
          )
      )

    do
      local len = 1 * 1024 * 1024 -- 1 MB

      local s = (function()
        local b = { }
        for i = 1, len do
          b[#b + 1] = string.char(math.random(0, 255))
        end
        return table.concat(b)
      end)()

      ensure_returns(
          "Large binary garbage " .. NAME,
          2, { true, s },
          LOAD(
              '1' .. NL
           .. 'S' .. NL
             .. len .. NL
             .. s .. NL
            )
        )
    end

    print("===== END string tests", NAME, "=====")

    print("===== BEGIN utf8 tests", NAME, "=====")

    ensure_returns(
        "empty utf8 " .. NAME,
        2, { true, "" },
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. '0' .. NL
           .. NL
          )
      )

    ensure_error_with_substring(
        "empty utf8 with data " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. '0' .. NL
           .. 'A' .. NL
          )
      )

    ensure_returns(
        "single char utf8 " .. NAME,
        2, { true, "A" },
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. '1' .. NL
           .. 'A' .. NL
          )
      )

    ensure_returns(
        "\\0 utf8 " .. NAME,
        2, { true, "\0" },
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. '1' .. NL
           .. '\0' .. NL
          )
      )

    ensure_returns(
        "Embedded\\0Zero utf8 " .. NAME,
        2, { true, "Embedded\0Zero" },
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. '13' .. NL
           .. 'Embedded\0Zero' .. NL
          )
      )
    ensure_returns(
        "Встроенный\\0Ноль utf8 " .. NAME,
        2, { true, "Встроенный\0Ноль" },
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. '15' .. NL
           .. 'Встроенный\0Ноль' .. NL
          )
      )

    ensure_error_with_substring(
        "empty utf8 no second nl " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. '0' .. NL
          )
      )

    ensure_error_with_substring(
        "utf8 size too large (empty, no nl) " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. '1' .. NL
          )
      )

    ensure_error_with_substring(
        "utf8 size too large (empty, nl) " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. (NL == "\r\n" and '2' or '1') .. NL
           .. NL
          )
      )

    ensure_error_with_substring(
        "utf8 size too large (non-empty) " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. (NL == "\r\n" and '3' or '2') .. NL
           .. 'A' .. NL
          )
      )

    for i = 1, 1e3 do
      local b = { }
      for i = 1, 1024 do
        b[#b + 1] = "A"
      end

      for i = 1, 10 do
        b[math.random(1, #b)] = string.char(math.random(128, 255)) -- bad code
      end

      local s = table.concat(b)

      -- There is a small probability that above code
      -- will generate correct UTF-8.
      ensure_error_with_substring(
          "bogus utf8 #" .. i .. " " .. NAME,
          "load failed: invalid utf-8 data", -- Important detail
          LOAD(
              '1' .. NL
           .. '8' .. NL
             .. #s .. NL -- Note that size is also wrong
             .. s .. NL
            )
        )
    end

    ensure_error_with_substring(
        "whole utf-8 test data " .. NAME,
        "load failed: invalid utf-8 data", -- Important detail
        LOAD(
            '1' .. NL
         .. '8' .. NL
           .. #UTF8_TEST_DATA .. NL -- Note that size is also wrong
           .. UTF8_TEST_DATA .. NL
          )
      )

    -- Lines with bad UTF-8 in the above document.
    local expected_errors =
    {
      --
      -- Original list of lines with bad UTF-8 sequences
      --
      102,  103,  105,  106,  107,  108,  109,  110,  114,  115,
      116,  117,  124,  125,  130,  135,  140,  145,  153,  154,
      155,  156,  157,  158,  159,  160,  161,  162,  169,  175,
      176,  177,  207,  208,  209,  210,  211,  220,  221,  222,
      223,  224,  232,  233,  234,  235,  236,  247,  248,  249,
      250,  251,  252,  253,  257,  258,  259,  260,  261,  262,
      263,  264;
      --
      -- Additional bad lines
      -- TODO: Add more tests to compensate for these
      --       (as some of this checks are for boundary conditions).
      --
      75; -- 5-byte sequence is illegal
      76; -- 6-byte sequence is illegal
      -- First byte 0xF7 (247) may not occur anywhere in valid UTF-8 byte seq.
      83;
      84; -- 5-byte sequence is illegal
      85; -- 6-byte sequence is illegal
      93; -- Overlong form
      --
      -- C-only
      --
      -- BOM non-character sequence is legitimately rejected by C reader,
      -- Lua reader does not care (should it be fixed to?).
      (LOAD_NAME == "C") and 82 or nil;
      -- TODO: Why do these two pass?
      (LOAD_NAME == "C") and 268 or nil;
      (LOAD_NAME == "C") and 269 or nil;
    }

    table.sort(expected_errors)

    local lines = split_by_char(UTF8_TEST_DATA, "\n")
    local actual_errors = { }
    for i = 1, #lines do
      local res, err = LOAD(
          '1' .. NL
       .. '8' .. NL
         .. (#lines[i] < 79 and #lines[i] or 79) .. NL
         .. lines[i] .. NL
        )
      if res then
        ensure_equals("loaded", err, lines[i])
      else
        ensure_equals(
            "correct error " .. i, err,
            "load failed: invalid utf-8 data" -- Important detail
          )
        actual_errors[#actual_errors + 1] = i
      end
    end
    ensure_tequals(
        "failure lines must match expected",
        actual_errors,
        expected_errors
      )

    print("===== END utf8 tests", NAME, "=====")

    print("===== BEGIN fixed table tests", NAME, "=====")

    ensure_returns(
        "empty table " .. NAME,
        2, { true, { } },
        LOAD(
            '1' .. NL
         .. 'T' .. NL
           .. '0' .. NL
           .. '0' .. NL
          )
      )

    ensure_returns(
        "some data " .. NAME,
        2,
        {
          true,
          { false, 0.36978798469984341945604455759166739881038665771484375 }
        },
        LOAD(
            '1' .. NL
         .. 'T' .. NL
           .. '2' .. NL
           .. '0' .. NL
           .. '0' .. NL
           .. 'N' .. NL
           .. '0.36978798469984341945604455759166739881038665771484375' .. NL
          )
      )

    ensure_error_with_substring(
        "table, no sizes, no nl " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
          )
      )

    ensure_error_with_substring(
        "table, no sizes, one nl " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. NL
          )
      )

    ensure_error_with_substring(
        "table, no sizes, two nls " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. NL
         .. NL
          )
      )

    ensure_error_with_substring(
        "table, garbage array size " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. 'a' .. NL
         .. '0' .. NL
          )
      )

    ensure_error_with_substring(
        "table, garbage hash size " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '0' .. NL
         .. 'a' .. NL
          )
      )

    ensure_error_with_substring(
        "table, garbage after sizes " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '1' .. NL
         .. '0' .. NL
         .. 'yada yada!' .. NL
          )
      )

    ensure_error_with_substring(
        "table, array size too large " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '2' .. NL
         .. '0' .. NL
         .. 'N' .. NL
         .. '42' .. NL
          )
      )

    ensure_error_with_substring(
        "table, hash size too large " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '0' .. NL
         .. '2' .. NL
         .. 'N' .. NL
         .. '42' .. NL
         .. 'N' .. NL
         .. '42' .. NL
          )
      )

    ensure_error_with_substring(
        "table, hash missing " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '1' .. NL
         .. '1' .. NL
         .. 'N' .. NL
         .. '42' .. NL
          )
      )

    ensure_error_with_substring(
        "table, hash value missing " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '1' .. NL
         .. '1' .. NL
         .. 'N' .. NL
         .. '42' .. NL
         .. 'N' .. NL
         .. '42' .. NL
          )
      )

    ensure_error_with_substring(
        "table, huge array size " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '65234375' .. NL
         .. '0' .. NL
         .. '-' .. NL
          )
      )

    ensure_error_with_substring(
        "table, huge hash size " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '0' .. NL
         .. '65234375' .. NL
         .. '1' .. NL
         .. '-' .. NL
          )
      )

    ensure_error_with_substring(
        "table, huge array and hash size " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 'T' .. NL
         .. '65234375' .. NL
         .. '65234375' .. NL
         .. '-' .. NL
          )
      )

    print("===== END fixed table tests", NAME, "=====")

    print("===== BEGIN stream table tests", NAME, "=====")

    ensure_returns(
        "empty table " .. NAME,
        2, { true, { } },
        LOAD(
            '1' .. NL
         .. 't' .. NL
           .. '-' .. NL
          )
      )

    ensure_returns(
        "nested tables " .. NAME,
        2, { true, { [ { 42 } ] = { 24 } } },
        LOAD(
            '1' .. NL
         .. 't' .. NL
           .. 't' .. NL
             .. 'N' .. NL
             .. '1' .. NL
             .. 'N' .. NL
             .. '42' .. NL
             .. '-' .. NL
           .. 't' .. NL
             .. 'N' .. NL
             .. '1' .. NL
             .. 'N' .. NL
             .. '24' .. NL
             .. '-' .. NL
           .. '-' .. NL
          )
      )

    ensure_returns(
        "some data " .. NAME,
        2,
        {
          true,
          { false, 0.36978798469984341945604455759166739881038665771484375 }
        },
        LOAD(
            '1' .. NL
         .. 't' .. NL
           .. 'N' .. NL
           .. '1' .. NL
           .. '0' .. NL
           .. 'N' .. NL
           .. '2' .. NL
           .. 'N' .. NL
           .. '0.36978798469984341945604455759166739881038665771484375' .. NL
           .. '-' .. NL
          )
      )

    ensure_error_with_substring(
        "table, no nil " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 't' .. NL
          )
      )

    ensure_error_with_substring(
        "table, nil, no nl " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 't' .. NL
         .. '-'
          )
      )

    ensure_error_with_substring(
        "table, hash value missing " .. NAME,
        "load failed: ",
        LOAD(
            '1' .. NL
         .. 't' .. NL
         .. 'N' .. NL
         .. '42' .. NL
          )
      )

    print("===== END stream table tests", NAME, "=====")

    print("===== BEGIN generative tests", NAME, "=====")

    do
      local constructors = { }

      local construct = function(nesting)
        return constructors[math.random(1, #constructors)](nesting)
      end

      constructors[#constructors + 1] = function()
        return nil
      end

      constructors[#constructors + 1] = function()
        return false
      end

      constructors[#constructors + 1] = function()
        return true
      end

      constructors[#constructors + 1] = function()
        return 0
      end

      constructors[#constructors + 1] = function()
        return 42
      end

      constructors[#constructors + 1] = function()
        return 3.14
      end

      constructors[#constructors + 1] = function()
        return 1/0
      end

      constructors[#constructors + 1] = function()
        return math.random()
      end

      constructors[#constructors + 1] = function()
        return math.random(-1000, 1000)
      end

      constructors[#constructors + 1] = function()
        return ""
      end

      constructors[#constructors + 1] = function()
        return "luatexts"
      end

      constructors[#constructors + 1] = function()
        return { }
      end

      constructors[#constructors + 1] = function(nesting)
        nesting = (nesting or 0) + 1

        if nesting > 10 then
          return { }
        end

        local r = { }

        for i = 1, math.random(0, 10) do
          r[i] = construct(nesting)
        end

        for i = 1, math.random(0, 10) do
          local k = construct(nesting)
          if k == nil then
            k = "(nil)"
          end

          r[k] = construct(nesting)
        end

        return r
      end

      local mutators = { }

      local mutate = function(str, nesting)
        return mutators[math.random(1, #mutators)](str, nesting)
      end

      -- truncate at end
      mutators[#mutators + 1] = function(str)
        local pos = math.random(1, #str)
        return str:sub(1, pos)
      end

      -- truncate at beginning
      mutators[#mutators + 1] = function(str)
        local pos = math.random(1, #str)
        return str:sub(-pos)
      end

      -- cut out the middle
      mutators[#mutators + 1] = function(str)
        local from = math.random(1, #str)
        local to = math.random(from, #str)
        return str:sub(1, from) .. str:sub(to)
      end

      -- swap two halves
      mutators[#mutators + 1] = function(str)
        local pos = math.random(1, #str)
        return str:sub(pos + 1, #str) .. str:sub(1, pos)
      end

      -- swap two characters
      mutators[#mutators + 1] = function(str)
        local pa, pb = math.random(1, #str), math.random(1, #str)
        local a, b = str:sub(pa, pa), str:sub(pb, pb)
        return
          str:sub(1, pa - 1) ..
          a ..
          str:sub(pa + 1, pb - 1) ..
          b ..
          str:sub(pb + 1, #str)
      end

      -- replace one character
      mutators[#mutators + 1] = function(str)
        local pos = math.random(1, #str)
        return
          str:sub(1, pos - 1) ..
          string.char(math.random(0, 255)) ..
          str:sub(pos + 1, #str)
      end

      -- increment one character
      mutators[#mutators + 1] = function(str)
        local pos = math.random(1, #str)
        local b = str:byte(pos, pos) + 1
        if b > 255 then
          b = 0
        end
        return
          str:sub(1, pos - 1) ..
          string.char(b) ..
          str:sub(pos + 1, #str)
      end

      -- decrement one character
      mutators[#mutators + 1] = function(str)
        local pos = math.random(1, #str)
        local b = str:byte(pos, pos) - 1
        if b < 0 then
          b = 255
        end
        return
          str:sub(1, pos - 1) ..
          string.char(b) ..
          str:sub(pos + 1, #str)
      end

      local mutated_ok = 0
      local mutated_fail = 0

      local C = 1
      assert(os.execute("rm tmp/*"))

      local num_steps = 1e4
      for i = 1, num_steps do
        if i % 500 == 0 --[[or (i >= 8732 and NL == "\n")--]] then
          print("step", i, "of", num_steps)
        end

        local n = math.random(0, 10)
        local tuple = { }
        for i = 1, n do
          tuple[i] = construct()
        end

        local data = ensure("save", luatexts_lua.save(unpack(tuple, 1, n)))

        local N = ("%08d"):format(C)
        local f = assert(io.open("tmp/".. N .. ".lua", "w"))
        f:write(
            tserialize(tuple), ",", n
          )
        f:close()
        local f = assert(io.open("tmp/".. N .. ".luatexts", "w"))
        f:write(data)
        f:close()
        C = C + 1

        --[[
        print("dataset #" .. i .. ", " .. #data .. " bytes")
        local c = 0
        print("tuple: ", tpretty(tuple, '  ', 80))
        print("data:", data)
        print(
            "0000 : " .. data:gsub(
                "\n", function()
                  c = c + 1
                  return (" : CRLF\n%04d : "):format(c)
                end
              )
          )
        --]]

        -- TODO: This does not cover utf-8. It should!
        ensure_returns(
            "load",
            n + 1, { true, unpack(tuple, 1, n) },
            LOAD(data)
          )

        -- Now trying to mutate
        -- (ignoring results, the point is not to crash)
        local num_steps = 100
        for j = 1, num_steps do
          --[[
          local dump = false
          if i >= 8732 and j >= 12 and NL == "\n" then
            print("mutation", i..":"..j, "of", num_steps)
            dump = true
          end
          --]]
          data = mutate(data)
          --[[
          if dump then
            print("MUTATED", data)
            print("GC size:", collectgarbage("count"))
          end
          --]]
          local res = LOAD(data)
          if res then
            mutated_ok = mutated_ok + 1
          else
            mutated_fail = mutated_fail + 1
          end

          collectgarbage("step")
        end
      end

      print("mutated ok:", mutated_ok)
      print("mutated fail:", mutated_fail)
    end

    print("===== END generative tests", NAME, "=====")
  end
end

local NAME = ""

print("===== BEGIN file tests", NAME, "=====")

ensure_error_with_substring(
    "/dev/null " .. NAME,
    "load_from_file failed: '/dev/null' is not a file",
    luatexts.load_from_file("/dev/null")
  )

ensure_error_with_substring(
    "missing file " .. NAME,
    "load_from_file failed:"
 .. " can't open './test/data/no-such-file.luatexts' for reading:"
 .. " No such file or directory",
    luatexts.load_from_file("./test/data/no-such-file.luatexts")
  )

ensure_error_with_substring(
    "directory " .. NAME,
    "load_from_file failed: './test/data/' is not a file",
    luatexts.load_from_file("./test/data/")
  )

ensure_error_with_substring(
    "empty " .. NAME,
    "load_from_file failed: './test/data/empty.luatexts' is empty",
    luatexts.load_from_file("./test/data/empty.luatexts")
  )

ensure_error_with_substring(
    "random garbage " .. NAME,
    "load failed: ",
    luatexts.load_from_file("./test/data/garbage.luatexts")
  )

ensure_error_with_substring(
    "truncated-1 " .. NAME,
    "load failed: ",
    luatexts.load_from_file("./test/data/truncated.luatexts")
  )

ensure_error_with_substring(
    "truncated-2 " .. NAME,
    "load failed: ",
    luatexts.load_from_file("./test/data/truncated2.luatexts")
  )

ensure_error_with_substring(
    "noeol " .. NAME,
    "load failed: ",
    luatexts.load_from_file("./test/data/noeol.luatexts")
  )

ensure_returns(
    "good " .. NAME,
    2, { true, 42 },
    luatexts.load_from_file("./test/data/good.luatexts")
  )

print("===== END file tests", NAME, "=====")

print("OK")
